{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";AAqBA,aAAA,IAAA,EAAA,MAAA,KAAA,eAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GArBA,SAAS,EAAI,EAAW,GACf,OAAA,EAAI,EAEb,SAAS,EAAI,EAAW,GACf,OAAC,EAAI,GAAG,QAAQ,GAOzB,SAAS,IAAwB,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACxB,OAAA,WAAU,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACR,OAAA,EAAI,OAAO,SAAC,EAAK,GACV,IAAA,EAAQ,EAAI,MAAA,GACjB,OAAO,MAAP,EAAc,EAAE,WAAA,EAAI,GAAQ,EAAE,WAAA,EAAA,EAAA,CAAC,GAAQ,UAC7C,IAIP,IAAM,EAAI,EAAQ,EAAK,GACvB,QAAQ,IAAI,EAAE,GAAI","file":"src.a9fceceb.js","sourceRoot":"..","sourcesContent":["function sum(a: number, b: number): number {\n  return a + b;\n}\nfunction ded(a: number, b: number): string {\n  return (a - b).toFixed(2);\n}\n\ntype CF = (...args: any[]) => any;\n\ntype LastFnReturnType<T extends any[]> = ReturnType<T[0]>;\n\nfunction compose<T extends CF[]>(...fns: T) {\n  return function (...args: any[]):LastFnReturnType<T> {\n    return fns.reduce((acc, fn) => {\n      const [, ...rest] = args;\n      return acc == null ? fn(...args) : fn(acc, ...rest);\n    }, undefined as LastFnReturnType<T>)\n  };\n}\n\nconst f = compose(sum, ded);\nconsole.log(f(44, 21));\n"]}